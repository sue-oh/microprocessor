		ORG	8000H
DATAOUT		EQU	0FFF0H
DATAIN		EQU	0FFF1H

DLED		EQU	0FFC1H	;Address of 2 right 7_SEGMENTs
ALED0		EQU	0FFC2H	;Address of 2 middle 7_SEGMENTs
ALED1		EQU	0FFc3H	;Address of 2 left 7_SEGMENTs

;Define constant
REP_COUNT	EQU	5

;Define variable
VSEC		EQU	30H ;value to be represented on right 2
VMIN		EQU	31H ;value to be represented on middle 2
VHOUR		EQU	32H ;value to be represented on left 2
VBVF		EQU	33H ;Temporary storage

		ORG	8000H
		MOV	SP, #60H

		MOV	VHOUR, #80H ;initialize
		MOV	VMIN, #51H ;initialize
		MOV	VSEC, #00H ;initialize
		CALL	DISPLAY
		
		
MAIN:		CALL	FINDKEYCODE
		JB	ACC.4, ERR ;result
		MOV	VBVF, A
		CALL	SHIFT
		CALL	HEX
		CALL	DIVISION
		CALL 	DISPLAY
		CALL	BOUNCE
		JMP	MAIN

HEX:		MOV	A,VHOUR
		ANL	A,#0F0H
		SWAP	A
		MOV	B,#10
		MUL	AB
		MOV	B,VHOUR
		ANL	B,#0FH
		ADD	A,B
		MOV	R4,A

		MOV	A,VMIN
		ANL	A,#0F0H
		SWAP	A
		MOV	B,#10
		MUL	AB
		MOV	B,VMIN
		ANL	B,#0FH
		ADD	A,B
		MOV	R5,A

		RET

DIVISION:	MOV	A,R4 ;Get the dec number of vhour
		MOV	B,R5 ;Get the dec number of vmin
		DIV AB ;divide vhour/vmin
		MOV	A,B ;move remainder to A
		MOV	B,#10 
		DIV AB ;remainder/10
		SWAP	A
		ORL	A,B ;change the remainder to HEX	
		MOV	VSEC,A
		
		RET
		

ERR:		CALL	ERROR
		JMP	MAIN

BOUNCE:		CALL	DELAY

RELOAD:		MOV	A, #0
		CALL	SUBKEY
		CPL	A
		JNZ	RELOAD

		CALL	DELAY
		RET

ERROR:		MOV	R4, #REP_COUNT

ERR_1:		MOV	VSEC, #0
		MOV	VMIN, #0
		MOV	VHOUR, #0
		CALL	DISPLAY

		MOV	R3, #10

FIRST:		CALL	DELAY
		DJNZ	R3, FIRST

		MOV	VSEC, #0FFH
		MOV	VMIN, #0FFH
		MOV	VHOUR, #0FFH
		CALL	DISPLAY

		MOV	R3, #10

SECOND:		CALL	DELAY
		DJNZ	R3, SECOND

		DJNZ	R4, ERR_1
		RET

DELAY:		MOV 	R0, #020H

REPEAT:		MOV	R1,#0FFH
		DJNZ	R1, $
		DJNZ	R0, REPEAT
		RET

SHIFT:		MOV	A, VHOUR
		SWAP	A
		MOV	VHOUR, A

		MOV	A, VMIN
		SWAP	A
		MOV	VMIN, A

		MOV	A, VMIN
		MOV	R0, #VHOUR
		XCHD	A, @R0
		MOV	VMIN, A

		MOV	A,VBVF
		MOV	R0, #VMIN
		XCHD	A, @R0	;Change to new input value
		
		RET

FINDKEYCODE:	
		PUSH	PSW ;program status word
		SETB	PSW.4
		SETB	PSW.3

INITIAL:	MOV	R1, #00H
		MOV	A, #11101111B
		SETB	C

COLSCAN:	MOV	R0,A
		INC	R1
		CALL	SUBKEY

		CJNE	A, #0FFH, RSCAN

		MOV	A, R0
		SETB	C
		RRC	A
		JNC	INITIAL
		JMP	COLSCAN

RSCAN:		MOV	R2, #00H
ROWSCAN:	RRC	A
		JNC	MATRIX
		INC	R2
		JMP	ROWSCAN

MATRIX:		MOV	A, R2
		MOV	B, #05H
		MUL	AB
		ADD	A, R1
		CALL	INDEX
		POP	PSW
		RET

SUBKEY:		MOV	DPTR,#DATAOUT
		MOVX	@DPTR, A
		MOV	DPTR, #DATAIN
		MOVX	A,@DPTR
		RET

DISPLAY:	MOV	DPTR,#DLED ;#DLED is address of two right
		MOV	A, VSEC
		MOVX	@DPTR,A

		MOV	DPTR, #ALED0 ;#ALED0 is address of two middle
		MOV	A, VMIN
		MOVX	@DPTR, A

		MOV	DPTR, #ALED1 ;#ALED1 is address of two left
		MOV	A, VHOUR
		MOVX	@DPTR, A
		RET




;DEFINE FUNCTION KEY
RWKEY			EQU	10H		;READ AND WRITE KEY
COMMA			EQU	11H		;COMMA (,)
PERIOD			EQU	12H		;PERIOD (.)
GO			EQU	13H		;GO-KEY
REG			EQU	14H		;REGISTER KEY
CD			EQU	15H		;DECREASE KEY
INCR			EQU 	16H		;INCREASE KEY
ST			EQU	17H		;SINGLE STEP KEY
RST			EQU	18H		;RST KEY

INDEX:			MOVC	A, @A+PC	;Accumulator has value of 1~24
			RET

KEYBASE:		DB	ST		;SW1, ST		1
			DB	INCR		;SW6, Increase		2
			DB	CD		;SW11, CD		3
			DB	REG		;SW15, REG		4
			DB	GO		;SW19, GO		5
			DB	0CH		;SW2, C			6
			DB	0DH		;SW7, D			7
			DB	0EH		;SW12, E		8
			DB	0FH		;SW16, F		9
			DB	COMMA		;SW20, COMMA (,)	10
			DB	08H		;SW3, 8			11
			DB	09H		;SW8, 9			12
			DB	0AH		;SW13, A		13
			DB	0BH		;SW17, B		14
			DB	PERIOD		;SW21, PERIOD (.)	15
			DB	04H		;SW4, 4			16
			DB	05H		;SW9, 5			17
			DB	06H		;SW14, 6		18
			DB	07H		;SW18, 7		19
			DB	RWKEY		;SW22, R/W		20
			DB	00H		;SW5, 0			21
			DB	01H		;SW10, 1		22
			DB	02H		;SW24, 2		23
			DB	03H		;SW23,3			24
			DB	RST		;SW24, RST KEY
